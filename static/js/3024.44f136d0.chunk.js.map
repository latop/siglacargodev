{"version":3,"file":"static/js/3024.44f136d0.chunk.js","mappings":"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","sources":["config/globals.js","views/pages/login/Login.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts"],"sourcesContent":["\nexport var serverURL = \"https://cargoreact.sigla.app/#/\";\nexport var token = \"\";\nexport var userName = \"\";\nexport var gpId = \"\";\nexport var expiration = \"\";\n// Inicialmente, verifique se há um token no Local Storage e defina a variável global a partir dele, se existir\nif (localStorage.getItem('token')) {\n    token = localStorage.getItem('token');\n    expiration = localStorage.getItem('expiration');\n    userName = localStorage.getItem('userName');\n    if (!localStorage.getItem('gpId')) {\n     /*   try {\n\n\n\n            // Construa a base da URL\n            const baseUrl = 'https://apicargodev.azurewebsites.net/api/getuser2';\n            var apiUrl = `${baseUrl}?token=${token}`;\n            apiUrl = `${apiUrl.replace(/ /g, ' ')}`;\n            // Faça a solicitação GET\n\n            const response = await fetch(apiUrl);\n\n\n            if (!response.ok) {\n                throw new Error(`Erro na solicitação à API: ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log(data);\n            localStorage.setItem('gpId', data.gpId);\n\n        } catch (error) {\n            console.error('Erro ao buscar os dados da API:', error);\n        }*/\n    }\n    else {\n        gpId = localStorage.getItem('gpId');\n        console.log(gpId + \"teste\");\n    }\n}\nelse {\n    token = \"\";\n}\n\n\n\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Navigation } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { token,serverURL } from '../../../config/globals'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginData, setLoginData] = useState(null);\n  const history = useNavigate();\n  var responseData = {};\n\n  const handleLogin = () => {\n    const data = {\n      \"domain\": \"application\",\n      \"UserLogin\": email,\n      \"password\": \"123\"\n    };\n    setLoginData(responseData);\n\n    fetch('https://apicarga.azurewebsites.net/api/Login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(data => {\n\n\n        // Trate a resposta do servidor conforme necessário\n        if (data.authenticated === true) {\n\n          localStorage.setItem('token', data.accessToken);\n          localStorage.setItem('userName', data.userName);\n          localStorage.setItem('expiration', data.expiration);\n          toast.success('Login realizado com sucesso!');\n          setTimeout(function () {\n            window.location.href = \"https://cargodev.sigla.app/\";\n          }, 1300);\n        }\n        else {\n          toast.error('Erro ao fazer login:');\n        }\n\n      })\n\n  };\n\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\"></p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Email\"\n                        autoComplete=\"username\"\n                        value={email}\n                        onChange={handleEmailChange}\n\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Senha\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={handleLogin}>\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          {/* Coloque o conteúdo do botão de link aqui, se necessário */}\n                        </CButton>\n                        {/* Adicione o ToastContainer com o estilo para centralizar */}\n                        <ToastContainer\n                          autoClose={1300}\n                          style={{\n                            top: '10%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                          }}\n                        />\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>PepsiCo Login</h2>\n                    <p>\n                      Entre com sua conta SSO\n                    </p>\n                    <Link to=\"\">\n\n\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Login com SSO\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\n\nexport default Login\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n"],"names":["token","gpId","localStorage","getItem","console","log","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","setLoginData","responseData","useNavigate","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","event","target","cilLockLocked","type","xs","CButton","color","onClick","data","fetch","method","headers","body","JSON","stringify","then","response","json","authenticated","setItem","accessToken","userName","expiration","toast","success","setTimeout","window","location","href","error","ToastContainer","autoClose","style","top","left","transform","width","Link","to","active","tabIndex"],"sourceRoot":""}